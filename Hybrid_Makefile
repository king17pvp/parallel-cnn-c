# Compiler settings
MPICC = mpicc
NVCC = nvcc
CFLAGS = -O3 -std=c99 -I./src
LDFLAGS = -lm

# Directories
SRC_DIR = src
OBJ_DIR = build

# Source files
C_SRCS = $(wildcard $(SRC_DIR)/*.c)
CU_SRCS = $(wildcard $(SRC_DIR)/*.cu)

# Object files
C_OBJS = $(patsubst $(SRC_DIR)/%.c,$(OBJ_DIR)/%.o,$(C_SRCS))
CU_OBJS = $(patsubst $(SRC_DIR)/%.cu,$(OBJ_DIR)/%.o,$(CU_SRCS))
OBJS = $(C_OBJS) $(CU_OBJS)

# Output executable
TARGET = build/cnn_exec_hybrid

# Default rule
all: $(OBJ_DIR) $(TARGET)

# Create object directory
$(OBJ_DIR):
	mkdir -p $(OBJ_DIR)

# Compile C files
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	$(MPICC) $(CFLAGS) -c $< -o $@

# Compile CUDA files
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cu
	$(NVCC) -c $< -o $@ --compiler-options '-fPIC'

# Link
$(TARGET): $(OBJS)
	$(MPICC) $(CFLAGS) -o $@ $^ -lcudart $(LDFLAGS)

# Clean
clean:
	rm -rf $(OBJ_DIR) $(TARGET)
